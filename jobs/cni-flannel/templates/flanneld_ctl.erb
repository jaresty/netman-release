#!/bin/bash

set -e -u

<%

def fan_block(index)
	"10.255.%d.0" % (index+1)
end

def hw_addr(ip)
	"0a:00:" + ip.split('.').map { |n| "%02x" % (n.to_i()) }.join(':')
end

def subnet_key(index)
	"/flannel/subnets/" + fan_block(index) + "-24"
end

def etcd_set(index, publicIP)
   "/var/vcap/packages/etcd/etcdctl set " + subnet_key(index) + " '" +
        JSON.pretty_generate({
        "BackendData" => { "VtepMAC" => hw_addr(fan_block(index)) },
        "PublicIP" => publicIP,
        "BackendType" => "vxlan",
        }) + "'"
end

%>

RUN_DIR=/var/vcap/sys/run/flannel
LOG_DIR=/var/vcap/sys/log/flannel
PIDFILE=$RUN_DIR/flanneld.pid

mkdir -p /var/vcap/sys/log/monit
exec 1>> /var/vcap/sys/log/monit/flanneld.out.log
exec 2>> /var/vcap/sys/log/monit/flanneld.err.log

mkdir -p /dev/net
mknod /dev/net/tun c 10 200 || true

case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > $PIDFILE

    /var/vcap/packages/etcd/etcdctl set /flannel/config '<%=
          require 'json'
          JSON.pretty_generate(p("cni-flannel.flannel")) %>'

    <% link("peers").instances.map do |instance| %>
      <%= etcd_set(instance.index, instance.address) %>
    <% end %>

    exec /var/vcap/packages/flannel/bin/flanneld \
      --log_dir=${LOG_DIR} \
      --etcd-endpoints=http://127.0.0.1:4001 \
      --etcd-prefix=/flannel \
      2> >(tee -a $LOG_DIR/flanneld.stderr.log | logger -p user.error -t flanneld) \
      1> >(tee -a $LOG_DIR/flanneld.stdout.log | logger -t flanneld)

    ;;

  stop)

    pid=$(cat $PIDFILE)

    for i in $(seq 30); do
      echo "sending INT to ${pid}..."
      if kill -INT $pid; then
        sleep 1
      else
        echo "exited"
        exit 0
      fi
    done

    echo "timed out; sending SIGQUIT followed by SIGKILL to ${pid}..."
    if kill -QUIT $pid; then
      sleep 5

      echo "killing ${pid}..."
      kill -9 $pid
    fi

    echo "killed"

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
